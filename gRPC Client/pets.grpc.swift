//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: pets.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol PetServiceListCall: ClientCallUnary {}

fileprivate final class PetServiceListCallBase: ClientCallUnaryBase<Empty, PetList>, PetServiceListCall {
  override class var method: String { return "/PetService/List" }
}

internal protocol PetServiceInsertCall: ClientCallUnary {}

fileprivate final class PetServiceInsertCallBase: ClientCallUnaryBase<Pet, Pet>, PetServiceInsertCall {
  override class var method: String { return "/PetService/Insert" }
}

internal protocol PetServiceDeleteCall: ClientCallUnary {}

fileprivate final class PetServiceDeleteCallBase: ClientCallUnaryBase<PetRequestId, Pet>, PetServiceDeleteCall {
  override class var method: String { return "/PetService/Delete" }
}


/// Instantiate PetServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol PetServiceService: ServiceClient {
  /// Synchronous. Unary.
  func list(_ request: Empty, metadata customMetadata: Metadata) throws -> PetList
  /// Asynchronous. Unary.
  @discardableResult
  func list(_ request: Empty, metadata customMetadata: Metadata, completion: @escaping (PetList?, CallResult) -> Void) throws -> PetServiceListCall

  /// Synchronous. Unary.
  func insert(_ request: Pet, metadata customMetadata: Metadata) throws -> Pet
  /// Asynchronous. Unary.
  @discardableResult
  func insert(_ request: Pet, metadata customMetadata: Metadata, completion: @escaping (Pet?, CallResult) -> Void) throws -> PetServiceInsertCall

  /// Synchronous. Unary.
  func delete(_ request: PetRequestId, metadata customMetadata: Metadata) throws -> Pet
  /// Asynchronous. Unary.
  @discardableResult
  func delete(_ request: PetRequestId, metadata customMetadata: Metadata, completion: @escaping (Pet?, CallResult) -> Void) throws -> PetServiceDeleteCall

}

internal extension PetServiceService {
  /// Synchronous. Unary.
  func list(_ request: Empty) throws -> PetList {
    return try self.list(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func list(_ request: Empty, completion: @escaping (PetList?, CallResult) -> Void) throws -> PetServiceListCall {
    return try self.list(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func insert(_ request: Pet) throws -> Pet {
    return try self.insert(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func insert(_ request: Pet, completion: @escaping (Pet?, CallResult) -> Void) throws -> PetServiceInsertCall {
    return try self.insert(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func delete(_ request: PetRequestId) throws -> Pet {
    return try self.delete(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func delete(_ request: PetRequestId, completion: @escaping (Pet?, CallResult) -> Void) throws -> PetServiceDeleteCall {
    return try self.delete(request, metadata: self.metadata, completion: completion)
  }

}

internal final class PetServiceServiceClient: ServiceClientBase, PetServiceService {
  /// Synchronous. Unary.
  internal func list(_ request: Empty, metadata customMetadata: Metadata) throws -> PetList {
    return try PetServiceListCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func list(_ request: Empty, metadata customMetadata: Metadata, completion: @escaping (PetList?, CallResult) -> Void) throws -> PetServiceListCall {
    return try PetServiceListCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func insert(_ request: Pet, metadata customMetadata: Metadata) throws -> Pet {
    return try PetServiceInsertCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func insert(_ request: Pet, metadata customMetadata: Metadata, completion: @escaping (Pet?, CallResult) -> Void) throws -> PetServiceInsertCall {
    return try PetServiceInsertCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func delete(_ request: PetRequestId, metadata customMetadata: Metadata) throws -> Pet {
    return try PetServiceDeleteCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func delete(_ request: PetRequestId, metadata customMetadata: Metadata, completion: @escaping (Pet?, CallResult) -> Void) throws -> PetServiceDeleteCall {
    return try PetServiceDeleteCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

